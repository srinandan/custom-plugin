# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# set up admin port tp 8000
admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8000

# listen on 8080 for api requests
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: apigee-gateway
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/httpbin"
                route:
                  prefix_rewrite: "/"
                  cluster: httpbin-service
                #per_filter_config:
                #  envoy.filters.http.dynamic_forward_proxy:
                #    host_rewrite: "httpbin.org"
          http_filters:
          #- name: envoy.filters.http.dynamic_forward_proxy
          #  config:
          #    dns_cache_config:
          #      name: dynamic_forward_proxy_cache_config
          #      dns_lookup_family: "V4_ONLY"
          - name: envoy.filters.http.ext_authz
            config:
              grpc_service:
                envoy_grpc:
                  cluster_name: custom-plugin
                timeout: 1s
          - name: envoy.filters.http.router
            typed_config: {}

  clusters:
  - name: mocktarget-service
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: mocktarget-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: mocktarget.apigee.net
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
        sni: mocktarget.apigee.net

  - name: httpbin-service
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: httpbin-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: httpbin.org
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
        sni: httpbin.org

  - name: custom-plugin
    type: STRICT_DNS
    http2_protocol_options: {}
    dns_lookup_family: V4_ONLY
    connect_timeout: 0.25s
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: custom-plugin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # needed for MacOS with docker
                # address: host.docker.internal
                # run docker run with --network="host" for 127.0.0.1 on linux
                # address: 127.0.0.1
                address: localhost
                port_value: 50051
